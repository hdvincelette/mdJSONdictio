% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify.mdJSON.R
\name{modify.mdJSON}
\alias{modify.mdJSON}
\title{Modify mdJSON Data Dictionaries}
\usage{
modify.mdJSON(
  x,
  how = c("add_attribute", "add_domain", "add_domainItem", "update_attribute",
    "update_domain", "update_domainItem"),
  codeName = "",
  allowNull = "",
  dataType = "",
  definition = "",
  units = "",
  unitsResolution = "",
  isCaseSensitive = "",
  missingValue = "",
  minValue = "",
  maxValue = "",
  fieldWidth = "",
  domainId = "",
  domainName = "",
  domainDescription = "",
  domainItem_value = "",
  domainItem_name = "",
  domainItem_definition = "",
  quiet = FALSE
)
}
\arguments{
\item{x}{List object converted from an mdJSON file.}

\item{how}{Character string matching one of the modification options: see ‘Details’.}

\item{codeName}{Conditionally optional character string. Name of the attribute to add or modify.}

\item{allowNull}{Optional logical (TRUE/FALSE). Whether null values are permissible for the attribute indicated with 'codeName'.}

\item{dataType}{Optional character string. Datatype of the attribute indicated with 'codeName'.}

\item{definition}{Optional character string. Definition of the attribute indicated with 'codeName'.}

\item{units}{Optional character string. Unit-of-measure for the attribute indicated with 'codeName'.}

\item{unitsResolution}{Optional numeric. Smallest increment of measurement for the attribute indicated with 'codeName'.}

\item{isCaseSensitive}{Optional logical (TRUE/FALSE). Whether case-sensitive ASCII encoding is used for the attribute indicated with 'codeName'.}

\item{missingValue}{Optional character string. Code representing missing values of the attribute indicated with 'codeName'.}

\item{minValue}{Optional character string. Minimum value permissible for the attribute indicated with 'codeName'.}

\item{maxValue}{Optional character string. Maximum value permissible for the attribute indicated with 'codeName'.}

\item{fieldWidth}{Optional integer. Field width of the attribute indicated with 'codeName'.}

\item{domainId}{Conditionally optional character string. Universally Unique Identifier (UUID) of the attribute or domain indicated with 'codeName' or domainName', respectively.}

\item{domainName}{Conditionally optional character string. Name of the domain to add or modify.}

\item{domainDescription}{Optional character string. Description of the domain indicated with 'domainName'.}

\item{domainItem_value}{Optional character string. Value of the domain item (entry value) indicated with 'domainName'.}

\item{domainItem_name}{Optional character string. Name of the domain item (entry value) indicated with 'domainItem_value'.}

\item{domainItem_definition}{Optional character string. Definition of the domain item (entry value) indicated with 'domainItem_value'.}

\item{quiet}{Optional logical. Default=FALSE. If TRUE, function runs with minimum input required and does not print revisions for approval.}
}
\value{
Returns a modified list object corresponding to the mdJSON file.
}
\description{
Amends an mdJSON data dictionary, including adding/updating attributes and domains.
}
\examples{
# Import mdJSON data dictionary as list
path<-system.file("extdata", "e.g.dictionary2.json", package = "mdJSONdictio")
input.dxnry <- rjson::fromJSON(file = path)

# Add an attribute
modified.dxnry<- modify.mdJSON(x = input.dxnry, how = "add_attribute", codeName = "WingArea")

# Add a domain
modified.dxnry<- modify.mdJSON(x = input.dxnry, how = "add_domain")

# Add a domain item
modified.dxnry<- modify.mdJSON(x = input.dxnry, how = "add_domainItem", codeName = "WingArea", domainItem_value = "U")

# Update attribute datatype and allowNull values
modified.dxnry<- modify.mdJSON(x = ref.dictionary, how = "update_attribute", codeName = "BandSize", dataType = "Integer", allowNull = TRUE)

# Convert list to JSON
new.json = rjson::toJSON(x = modified.dxnry)

# Export JSON to disk
write(x = new.json, file = "e.g.dictionary.json")
}
\seealso{
\code{modify.mdJSON()}
}
\keyword{dictionary,}
\keyword{json,}
\keyword{mdEditor,}
\keyword{mdJSON,}
\keyword{metadata}
